[Unit]
Description=Dash Core Daemon
After=syslog.target network.target

# Notes:
# Do not edit this file. Instead edit /etc/sysconfig/dashd
#
# Watch the daemon service actions in the syslog journal with:
# sudo journalctl -u dashd.service -f

[Service]
Type=forking
PIDFile=${PID_FILE}
User=dashcore
Group=dashcore
EnvironmentFile=/etc/sysconfig/dashd

ExecStart=/usr/sbin/dashd -daemon -disablewallet -conf=${CONFIG_FILE} -datadir=${DATA_DIR} -pid=${PID_FILE}
#ExecStart=/usr/sbin/dashd -daemon -disablewallet -conf=${CONFIG_FILE} -datadir=${DATA_DIR} -pid=${PID_FILE} $OPTIONS # OPTIONS IS DEPRECATED
# Experimental: sleep then mnsync reset
#ExecStartPost=/usr/bin/sleep $START_SLEEP_TIME
#ExecStartPost=/usr/bin/dash-cli -conf=${CONFIG_FILE} -datadir=${DATA_DIR} mnsync reset
# Send email after start
ExecStartPost=-/etc/sysconfig/dashd-scripts/dashd.send-email.sh start $EMAIL_FROM $EMAIL_TO $MASTERNODE_ALIAS

# If ExecStop is not set, systemd sends a SIGTERM, which is "okay", just not ideal
ExecStop=/usr/bin/dash-cli -conf=${CONFIG_FILE} -datadir=${DATA_DIR} stop
# Need to allow dashd to shutdown properly before taking additional actions.
ExecStopPost=-/usr/bin/echo "Sleeping during shutdown for ${STOP_SLEEP_TIME} seconds"
ExecStopPost=-/usr/bin/sleep $STOP_SLEEP_TIME
# Send email at stop
ExecStopPost=-/etc/sysconfig/dashd-scripts/dashd.send-email.sh stop $EMAIL_FROM $EMAIL_TO $MASTERNODE_ALIAS

Restart=on-failure
# Time that systemd gives a process to stop / start before shooting it in the head
TimeoutStopSec=90
TimeoutStartSec=90
# If something triggers an auto-restart, let's wait a bit before going ahead
RestartSec=45
# "Burst" a number of restarts in quick succession? Okay, then we take a
# breather for an interval.
StartLimitInterval=240
StartLimitBurst=5

PrivateTmp=true

[Install]
WantedBy=multi-user.target

# Really useful:
# * https://www.digitalocean.com/community/tutorials/understanding-systemd-units-and-unit-files
# * https://www.freedesktop.org/software/systemd/man/systemd.service.html
# * man systemd, man systemd.service, and man systemd.unit
